server.port = 8080

# MySQL connection
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB Source URL
spring.datasource.url=jdbc:mysql://13.125.232.197:3306/mimo?serverTimezone=Asia/Seoul&characterEncoding=UTF-8

# DB username
spring.datasource.username=root

# DB password
spring.datasource.password=encore!00$

# true ??? JPA ??? ?? ??
spring.jpa.show-sql=true

# DDL(create, alter, drop) ??? DB? ?? ??? ??? ? ??.
spring.jpa.hibernate.ddl-auto=update

# JPA? ???? Hibernate? ????? ??? SQL? ???? ????. ???? ???? ??? ???? ?? ???
spring.jpa.properties.hibernate.format_sql=true

spring.profiles.include = oauth

spring.session.store-type-jdbc

# ???? ?? ?? ??
spring.jpa.properties.hibernate.show_sql=true

#??? ???? ???? ??? ???? ??
logging.level.org.hibernate.type.descriptor.sql=trace

#파일 한 개당 최대 사이즈
spring.servlet.multipart.maxFileSize=20MB
#요청당 최대 파일 크기
spring.servlet.multipart.maxRequestSize=100MB
#상품 이미지 업로드 경로
itemImgLocation=C:/shop/item
#리소스 업로드 경로
uploadPath=file:///C:/shop/

### Google
spring.security.oauth2.client.registration.google.client-id=908770441529-k6ev7o0conblc7onser42k02vgvuaroh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

### Github
spring.security.oauth2.client.registration.github.client-id=d3e47fc2ddd966fa4352
spring.security.oauth2.client.registration.github.client-secret=3bc0f6b8332f93076354c2a5bada2f5a05aea60d
spring.security.oauth2.client.registration.github.scope=user:email, read:user
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

### Naver
# registration
spring.security.oauth2.client.registration.naver.client-id=2aNXdK6_gZNAw00dayGP
spring.security.oauth2.client.registration.naver.client-secret=HlVYbLN1k5
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver
# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response


### Kakao
# registration
spring.security.oauth2.client.registration.kakao.client-id=d8abf9166bb06913836c9e42e27eabb8
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, profile_image, account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
# provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id


## JWT ?? ??
## java ??? ? ?? ?? ??? ?????.
app.auth.tokenSecret=04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
app.auth.tokenExpirationMsec=864000000
## ?????? ?? ?? ? JWT? ??? ?
app.oauth2.authorizedRedirectUris=http://localhost:3000/oauth2/redirect

app.cors.allowedOrigins=http://localhost:3000,http://localhost:8080
